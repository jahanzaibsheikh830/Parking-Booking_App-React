{"version":3,"sources":["assets/bg.jpg","component/login/textfield.js","baseUrl/baseURL.js","redux/action/reduxAction.js","component/login/login.js","component/signup/textfield.js","component/signup/signup.js","component/user/dashboard.js","component/user/booking.js","component/user/viewbooking.js","component/admin/adminDash.js","config/firebase.js","component/admin/areas.js","component/router/logout.js","component/router/navbar.js","component/router/route.js","App.js","redux/reducer/reducers.js","redux/reducer/index.js","redux/store/store.js","index.js"],"names":["TextField","label","props","useField","field","meta","className","htmlFor","name","touched","error","autoComplete","component","url","window","location","href","split","user","data","type","payload","Login","useState","msg","setMsg","msgClass","setMsgClass","log","setLog","dispatch","useDispatch","validate","Yup","email","required","password","min","style","backgroundImage","background","height","width","backgroundRepeat","backgroundSize","backgroundPosition","initialValues","validationSchema","onSubmit","values","loginData","toLowerCase","axios","method","withCredentials","then","res","status","message","loginStatus","loginUser","role","setTimeout","catch","err","console","formik","color","backgroundColor","to","Signup","firstName","max","lastName","phone","matches","marginTop","onSubmitProps","userData","resetForm","Dashboard","setData","useEffect","map","value","i","src","imgUrl","alt","desc","pathname","state","Booking","valData","setValData","startDay","setStartDay","endDay","setEndDay","startTime","setStartTime","endTime","setEndTime","slot","setSlot","setErr","slotBtn","setSlotBtn","bookBtn","setBookBtn","vSlot","setVSlot","slots","count","push","startDate","Date","endDate","bookPark","undefined","Number","Swal","fire","icon","title","text","t","toLocaleTimeString","t1","moment","valSlot","find","val","ind","toLocaleString","isSameOrAfter","isSameOrBefore","toLocaleDateString","isBetween","getMinutes","fin","filter","indexOf","handleSubmit","e","target","boxShadow","preventDefault","diff","format","onChange","fontSize","onClick","ViewBooking","scope","length","index","AdminDashboard","overflow","id","swalWithBootstrapButtons","mixin","customClass","confirmButton","cancelButton","buttonsStyling","showCancelButton","confirmButtonText","cancelButtonText","reverseButtons","result","isConfirmed","reload","dismiss","DismissReason","cancel","delt","_id","imageUrl","imageWidth","imageHeight","imageAlt","firebaseApp","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","Storage","storage","AddArea","setUrl","document","getElementById","imgURl","placeholder","rows","event","images","files","now","ref","put","snapshot","position","showConfirmButton","timer","bytesTransferred","totalBytes","getDownloadURL","URL","Logout","useData","useSelector","addUser","history","useHistory","textTransform","response","Navbar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","RouterConfig","profile","exact","path","AdminDasboard","App","initialState","action","rootReducer","combineReducers","store","createStore","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b4f9318b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bg.fa917832.jpg\";","import React from 'react';\r\nimport { ErrorMessage, useField } from 'formik';\r\n\r\nexport const TextField = ({ label, ...props }) => {\r\n  const [field, meta] = useField(props);\r\n  return (\r\n    <div className=\"mb-2\">\r\n      <label htmlFor={field.name}>{label}</label>\r\n      <input\r\n        className={`form-control shadow-none ${meta.touched && meta.error && 'is-invalid'}`}\r\n        {...field} {...props}\r\n        autoComplete=\"off\"\r\n      />\r\n      <ErrorMessage component=\"div\" name={field.name} className=\"error\" />\r\n    </div>\r\n  )\r\n}","var url = window.location.href.split(\":\");\r\nif (url[0] === \"https\") {\r\n    url = 'https://parking-app-react.herokuapp.com'\r\n}\r\nelse {\r\n    url = \"http://localhost:4000\"\r\n}\r\nexport default url;","export const user = (data) =>{\r\n    return{\r\n        type: \"ADD_USER\",\r\n        payload: data\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport background from '../../assets/bg.jpg'\r\nimport { Form, Formik } from 'formik'\r\nimport { TextField } from './textfield';\r\nimport { Link } from 'react-router-dom'\r\nimport * as Yup from \"yup\"\r\nimport axios from 'axios'\r\nimport url from '../../baseUrl/baseURL'\r\nimport { useDispatch } from 'react-redux'\r\nimport { user } from '../../redux/action/reduxAction'\r\nfunction Login() {\r\n    const [msg, setMsg] = useState()\r\n    const [msgClass, setMsgClass] = useState()\r\n    const [log, setLog] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n    const validate = Yup.object({\r\n        email: Yup.string()\r\n            .email('Email is invalid')\r\n            .required('Email is required'),\r\n        password: Yup.string()\r\n            .min(6, 'Password must be at least 6 charaters')\r\n            .required('Password is required'),\r\n    })\r\n    return (\r\n        <div style={{\r\n            backgroundImage: `url(${background})`,\r\n            height: \"100vh\", width: \"100%\", backgroundRepeat: \"no-repeat\",\r\n            backgroundSize: \"cover\", backgroundPosition: \"center\"\r\n        }}>\r\n            <div className='container '>\r\n                <div className='row' >\r\n                    <div className='d-flex justify-content-center align-items-center' style={{ width: \"100%\", height: \"100vh\" }}>\r\n                        <div className=\"col-md-5 bg-white px-5 pb-3\" >\r\n                            <Formik\r\n                                initialValues={{\r\n                                    email: '',\r\n                                    password: '',\r\n                                }}\r\n                                validationSchema={validate}\r\n                                onSubmit={values => {\r\n                                    const loginData = {\r\n                                        email: values.email.toLowerCase(),\r\n                                        password: values.password\r\n                                    }\r\n                                    setLog(true)\r\n                                    axios({\r\n                                        method: 'post',\r\n                                        url: url + \"/login\",\r\n                                        data: loginData,\r\n                                        withCredentials: true\r\n                                    }).then((res) => {\r\n                                        if (res.data.status === 200) {\r\n                                            setMsgClass('alert-success')\r\n                                            setMsg(res.data.message)\r\n                                            dispatch(user({\r\n                                                loginStatus: true,\r\n                                                loginUser: res.data.user,\r\n                                                role: res.data.user.role\r\n                                            }))\r\n                                            // history.push('/dasboard')\r\n                                        } else {\r\n                                            setMsgClass('alert-danger')\r\n                                            setLog(false)\r\n                                            setMsg(res.data.message)\r\n                                            setTimeout(()=>{\r\n                                                setMsg('')                          \r\n                                            },3000)\r\n                                        }\r\n                                    }).catch((err) => {\r\n                                        console.log(err)\r\n                                    })\r\n                                }}\r\n                            >\r\n                                {formik => (\r\n                                    <div>\r\n                                        <h1 className=\"my-4 font-weight-bold .display-4\" style={{ color: \"#083144\" }}>Login</h1>\r\n                                        <Form>\r\n                                            <TextField label=\"Email\" name=\"email\" type=\"email\" />\r\n                                            <TextField label=\"Password\" name=\"password\" type=\"password\"/>\r\n                                            <button className=\"btn text-white\" style={{ width: \"100%\", backgroundColor: \"#083144\" }} type=\"submit\">\r\n                                                {log? <div className='text-center mt-2'>\r\n                                                    <div className=\"spinner-border\" style={{width: 20, height:20}} role=\"status\">\r\n                                                        <span className=\"sr-only\">Loading...</span>\r\n                                                    </div>\r\n                                                </div>: <span>Login</span>}\r\n                                                        \r\n                                            </button>\r\n                                        </Form>\r\n                                        <p className=\"mt-2\">Already have an account? <Link to=\"/\">Signup</Link> </p>\r\n                                        {msg ? <div className={`alert ${msgClass}`} role=\"alert\">{msg}</div> : null}\r\n                                    </div>\r\n                                )}\r\n                            </Formik>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","import React from 'react';\r\nimport { ErrorMessage, useField } from 'formik';\r\n\r\nexport const TextField = ({ label, ...props }) => {\r\n  const [field, meta] = useField(props);\r\n  return (\r\n    <div className=\"mb-2\">\r\n      <label htmlFor={field.name}>{label}</label>\r\n      <input\r\n        className={`form-control shadow-none ${meta.touched && meta.error && 'is-invalid'}`}\r\n        {...field} {...props}\r\n        autoComplete=\"off\"\r\n      />\r\n      <ErrorMessage component=\"div\" name={field.name} className=\"error\" />\r\n    </div>\r\n  )\r\n}","import React, { useState } from 'react'\r\nimport background from '../../assets/bg.jpg'\r\nimport { Form, Formik } from 'formik'\r\nimport { TextField } from './textfield';\r\nimport { Link } from 'react-router-dom'\r\nimport * as Yup from \"yup\"\r\nimport axios from 'axios'\r\nimport url from '../../baseUrl/baseURL'\r\nfunction Signup() {\r\n  const phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/\r\n  const [msg, setMsg] = useState()\r\n  const [msgClass, setMsgClass] = useState()\r\n  const [log, setLog] = useState(false)\r\n\r\n  const validate = Yup.object({\r\n    firstName: Yup.string()\r\n      .max(15, 'Must be 15 characters or less')\r\n      .required('Required'),\r\n    lastName: Yup.string()\r\n      .max(20, 'Must be 20 characters or less')\r\n      .required('Required'),\r\n    email: Yup.string()\r\n      .email('Email is invalid')\r\n      .required('Email is required'),\r\n    phone: Yup.string().matches(phoneRegExp, 'Phone number is not valid'),\r\n    password: Yup.string()\r\n      .min(6, 'Password must be at least 6 charaters')\r\n      .required('Password is required')\r\n  })\r\n  return (\r\n    <div style={{\r\n      backgroundImage: `url(${background})`,\r\n      height: \"100vh\", width: \"100%\", backgroundRepeat: \"no-repeat\",\r\n      backgroundSize: \"cover\", backgroundPosition: \"center\"\r\n    }}>\r\n      <div className='container '>\r\n        <div className='row'>\r\n          <div className='d-flex justify-content-center align-items-center' style={{ width: \"100%\", height: \"100vh\" }}>\r\n            <div className=\"col-md-5 bg-white px-5 pb-3\" style={{ marginTop: '40px' }}>\r\n              <Formik\r\n                initialValues={{\r\n                  firstName: '',\r\n                  lastName: '',\r\n                  email: '',\r\n                  phone: '',\r\n                  password: '',\r\n                }}\r\n                validationSchema={validate}\r\n                onSubmit={(values, onSubmitProps) => {\r\n                  const userData = {\r\n                    firstName: values.firstName,\r\n                    lastName: values.lastName,\r\n                    email: values.email.toLowerCase(),\r\n                    phone: values.phone,\r\n                    password: values.password\r\n                  }\r\n                  setLog(true)\r\n                  axios({\r\n                    method: 'post',\r\n                    url: url + \"/signup\",\r\n                    data: userData,\r\n                    withCredentials: true\r\n                  }).then((res) => {\r\n                    if (res.data.status === 200) {\r\n                      setMsgClass('alert-success')\r\n                      setMsg(res.data.message)\r\n                      onSubmitProps.resetForm()\r\n                      setLog(false)\r\n                    } else {\r\n                      setMsgClass('alert-danger')\r\n                      setMsg(res.data.message)\r\n                      setTimeout(() => {\r\n                        setMsg('')\r\n                      }, 3000)\r\n                    }\r\n                  }).catch((err) => {\r\n                    console.log(err)\r\n                  })\r\n                }}\r\n              >\r\n                {formik => (\r\n                  <div>\r\n                    <h1 className=\"my-4 font-weight-bold .display-4\" style={{ color: \"#083144\" }}>Sign Up</h1>\r\n                    <Form>\r\n                      <TextField label=\"First Name\" name=\"firstName\" type=\"text\" />\r\n                      <TextField label=\"Last Name\" name=\"lastName\" type=\"text\" />\r\n                      <TextField label=\"Email\" name=\"email\" type=\"email\" />\r\n                      <TextField label=\"Phone\" name=\"phone\" type=\"text\" />\r\n                      <TextField label=\"Password\" name=\"password\" type=\"password\" />\r\n                      <button className=\"btn text-white w-100\" style={{ backgroundColor: \"#083144\" }} type=\"submit\">\r\n                        {log ? <div className='text-center mt-2'>\r\n                          <div className=\"spinner-border\" style={{ width: 20, height: 20 }} role=\"status\">\r\n                            <span className=\"sr-only\">Loading...</span>\r\n                          </div>\r\n                        </div> : <span>Register</span>}\r\n                      </button>\r\n                    </Form>\r\n                    <p className=\"mt-2\">Already have an account? <Link to=\"/login\">Login</Link> </p>\r\n                    {msg ? <div className={`alert ${msgClass}`} role=\"alert\">{msg}</div> : null}\r\n                  </div>\r\n                )}\r\n              </Formik>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Signup","import React ,{useEffect, useState} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport url from '../../baseUrl/baseURL'\r\nfunction Dashboard() {\r\n    const [data,setData] = useState([])\r\n    useEffect(()=>{\r\n        axios({\r\n            method: 'get',\r\n            url: url + \"/getLocations\",\r\n            withCredentials: true \r\n        }).then((res)=>{\r\n            if(res.status === 200){\r\n                setData(res.data.data)\r\n            }else{\r\n                console.log(res)\r\n            }\r\n        }).catch((err)=>{\r\n            console.log(err)\r\n        })\r\n    },[])\r\n    return (\r\n        <div>\r\n            <div className='container'>\r\n                <div className='row mt-5'>\r\n                    {\r\n                        data.map((value, i) => {\r\n                            return (\r\n                                <div className='col-md-4' key={i}   >\r\n                                    <div className=\"card\" >\r\n                                        <img src={value.imgUrl} className=\"card-img-top\" alt=\"...\" style={{height: 200}} />\r\n                                        <div className=\"card-body\">\r\n                                            <h5 className=\"card-title text-capitalize\" style={{ color: \"#083144\" }}>{value.location}</h5>\r\n                                            <p className=\"card-text\">{value.desc}</p>\r\n                                            <Link to={{\r\n                                                pathname: \"/booking\",\r\n                                                state: value\r\n                                            }} className=\"btn text-white\" style={{backgroundColor: \"#083144\"}}>Booking</Link>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard","import React, { useState } from 'react'\r\nimport axios from 'axios'\r\nimport url from '../../baseUrl/baseURL'\r\nimport Swal from 'sweetalert2'\r\nimport moment from 'moment'\r\nfunction Booking(props) {\r\n    const [valData, setValData] = useState([])\r\n    const [startDay, setStartDay] = useState('')\r\n    const [endDay, setEndDay] = useState('')\r\n    const [startTime, setStartTime] = useState('')\r\n    const [endTime, setEndTime] = useState('')\r\n    const [slot, setSlot] = useState()\r\n    const [err, setErr] = useState('')\r\n    const [slotBtn, setSlotBtn] = useState(true)\r\n    const [bookBtn, setBookBtn] = useState(false)\r\n    const [vSlot, setVSlot] = useState(false)\r\n    const data = props.location.state.slots\r\n    console.log(data)\r\n    const count = []\r\n    for (let i = 1; i <= data; i++) {\r\n        count.push(i)\r\n    }\r\n\r\n    let startDate = new Date(startDay + \" \" + startTime)\r\n    let endDate = new Date(endDay + \" \" + endTime)\r\n    function bookPark() {\r\n        slot === '' || slot === undefined ? setErr('Required') :\r\n            axios({\r\n                method: 'post',\r\n                url: url + \"/booking\",\r\n                data: {\r\n                    location: props.location.state.location,\r\n                    startDate: Number(startDate),\r\n                    endDate: Number(endDate),\r\n                    slot: slot,\r\n                },\r\n                withCredentials: true\r\n            }).then((res) => {\r\n                if (res.data.status === 200) {\r\n                    console.log(res.data.message)\r\n                    Swal.fire(\r\n                        'Congratulations',\r\n                        res.data.message,\r\n                        'success'\r\n                    )\r\n                    setVSlot(false)\r\n                    setSlotBtn(true)\r\n                    setBookBtn(false)\r\n                    setStartDay('')\r\n                    setStartTime('')\r\n                    setEndDay('')\r\n                    setEndTime('')\r\n                } else {\r\n                    console.log(res.data.message)\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Oops...',\r\n                        text: res.data.message,\r\n                    })\r\n                }\r\n            }).catch((err) => {\r\n                console.log(err)\r\n            })\r\n    }\r\n    let t = new Date(startDate).toLocaleTimeString()\r\n    let t1 = new Date(endDate).toLocaleTimeString()\r\n    t = moment(t, 'h:mm')\r\n    t1 = moment(t1, 'h:mm')\r\n    function validateSlot(e) {\r\n        e.preventDefault()\r\n        if (moment(startDay) > moment(endDay)) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: \"End Date should be equal or greater than start date\",\r\n            })\r\n        }\r\n        else if (moment(endTime) <= moment(startTime)) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: \"End time should be greater than start time\",\r\n            })\r\n        }\r\n        else if (t1.diff(t, 'minutes') <= 14) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: \"Maximum booking time is 15 minutes\",\r\n            })\r\n        }\r\n        else {\r\n            axios({\r\n                method: \"post\",\r\n                url: url + \"/validateSlot\",\r\n                data: {\r\n                    startDate: Number(startDate),\r\n                    endDate: Number(endDate),\r\n                    location: props.location.state.location,\r\n                },\r\n                withCredentials: true\r\n            }).then((res) => {\r\n                if (res.data.status === 200) {\r\n                    setValData(res.data.data)\r\n                    console.log(res.data.data)\r\n                }\r\n                else {\r\n                    setValData([])\r\n                }\r\n            }).catch((err) => {\r\n                console.log(err)\r\n            })\r\n            setVSlot(true)\r\n            setSlotBtn(false)\r\n            setBookBtn(true)\r\n        }\r\n    }\r\n\r\n    var valSlot = []\r\n\r\n    valData.find((val, ind) => {\r\n        if (moment(new Date(startDate).toLocaleString()).isSameOrAfter(new Date(val.startDate).toLocaleString()) &&\r\n            moment(new Date(startDate).toLocaleString()).isSameOrBefore(new Date(val.endDate).toLocaleString())\r\n            || moment(new Date(val.startDate).toLocaleDateString()).isBetween(new Date(startDate).toLocaleDateString(), new Date(endDate).toLocaleDateString()) && new Date(startDate).getMinutes() >= new Date(val.startDate).getMinutes() && new Date(startDate).getMinutes() <= new Date(val.endDate).getMinutes()) {\r\n            return valSlot.push(Number(val.slot))\r\n        }\r\n        if (moment(new Date(endDate).toLocaleString()).isSameOrBefore(new Date(val.endDate).toLocaleString()) &&\r\n            moment(new Date(endDate).toLocaleString()).isSameOrAfter(new Date(val.startDate).toLocaleString())\r\n            || moment(new Date(val.endDate).toLocaleDateString()).isBetween(new Date(startDate).toLocaleDateString(), new Date(endDate).toLocaleDateString())\r\n            && new Date(endDate).getMinutes() >= new Date(val.endDate).getMinutes() && new Date(endDate).getMinutes() <= new Date(val.startDate).getMinutes()) {\r\n            return valSlot.push(Number(val.slot))\r\n        }\r\n    })\r\n    var fin = count.filter((val) => {\r\n        return valSlot.indexOf(val) < 0\r\n    })\r\n    function handleSubmit(e) {\r\n        console.log(e.target.name)\r\n        if (e.target.name === \"startDay\") {\r\n            setStartDay(e.target.value)\r\n        }\r\n        else if(e.target.name === \"startTime\"){\r\n            setStartTime(e.target.value)\r\n        }\r\n        else if(e.target.name === \"endTime\"){\r\n            setEndTime(e.target.value)\r\n        }\r\n        else{\r\n            setEndDay(e.target.value)\r\n        }\r\n        setVSlot(false)\r\n        setSlotBtn(true)\r\n        setBookBtn(false)\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">\r\n                <h2 className=\"text-center mt-3\">Book Parking</h2>\r\n                <div className=\"col-md-5 bg-white py-4 px-4 mt-3\" style={{ boxShadow: \"0 0 10px grey\" }}>\r\n                    <h2 className=\"text-center mb-3 text-capitalize\">{props.location.state.location}</h2>\r\n                    <form onSubmit={setVSlot ? validateSlot : bookPark}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col\">\r\n                                <label>Start Day</label>\r\n                                <input type=\"date\" className=\"form-control\" min={moment().format('YYYY-MM-DD')}\r\n                                    value={startDay} required onChange={handleSubmit} name='startDay' />\r\n                            </div>\r\n                            <div className=\"col\">\r\n                                <label>End Day</label>\r\n                                <input type=\"date\" className=\"form-control\" min={moment().format('YYYY-MM-DD')}\r\n                                    value={endDay} required onChange={handleSubmit} name='endDay'/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col\">\r\n                                <label>Start Time</label>\r\n                                <input type=\"time\" className=\"form-control\" min={moment().format('H:mm')}\r\n                                    value={startTime} required onChange={handleSubmit} name='startTime'/>\r\n                            </div>\r\n                            <div className=\"col\">\r\n                                <label>End Time</label>\r\n                                <input type=\"time\" className=\"form-control\" min={moment().format('H:mm')}\r\n                                    required onChange={handleSubmit} name='endTime'/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col\">\r\n                                {vSlot ?\r\n                                    <>\r\n                                        <label>Select Slots</label>\r\n                                        <select className=\"form-control\" required onChange={(e) => setSlot(e.target.value)}>\r\n                                            <option>Select Slots</option>\r\n                                            {\r\n                                                fin.map((val, ind) => {\r\n                                                    return (\r\n                                                        <option value={val} key={ind}>Slot {val}</option>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </select></> : null}\r\n                                {err ? <p className='text-danger' style={{ fontSize: 12 }}>{err}</p> : null}\r\n                            </div>\r\n                        </div>\r\n                        {bookBtn ? <button className=\"btn text-white mt-3 w-100\" style={{ backgroundColor: \"#083144\" }}\r\n                            type=\"button\" onClick={bookPark}>Book</button> : null}\r\n                        {slotBtn ? <button className=\"btn text-white mt-3 w-100\"\r\n                            style={{ backgroundColor: \"#083144\" }}\r\n                            type=\"submit\" >Show Slot</button> : null}\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Booking","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport url from './../../baseUrl/baseURL'\r\nfunction ViewBooking() {\r\n    const [data, setData] = useState([])\r\n\r\n    useEffect(() => {\r\n        axios({\r\n            method: 'get',\r\n            url: url + '/getBookings',\r\n            withCredentials: true,\r\n        }).then((res) => {\r\n            console.log(res.data.data)\r\n            setData(res.data.data)\r\n        }).catch((err) => {\r\n            console.log(err)\r\n        })\r\n    }, [])\r\n    // if (data.length === 0) {\r\n    //     return (\r\n    //         <div className='container'>\r\n    //         <div className=\"d-flex align-items-center justify-content-center \" style={{width: \"100%\", height: \"100vh\"}}>\r\n    //             <div className=\"spinner-border \" role=\"status\">\r\n    //                 <span className=\"sr-only\">Loading...</span>\r\n    //             </div>\r\n    //         </div>\r\n    //     </div>\r\n    //     )\r\n    // }\r\n    return (\r\n        <div >\r\n            <div className='container'>\r\n                <div className=\"row mt-5\">\r\n                    <table className=\"table\">\r\n                        <thead style={{ backgroundColor: \"#083144\", color: \"#fff\" }}>\r\n                            <tr>\r\n                                <th scope=\"col\">#</th>\r\n                                <th scope=\"col\">Full Name</th>\r\n                                <th scope=\"col\">Slot</th>\r\n                                <th scope=\"col\">Start Date</th>\r\n                                <th scope=\"col\">End Date</th>\r\n                                <th scope=\"col\">Start Time</th>\r\n                                <th scope=\"col\">End Time</th>\r\n                                <th scope=\"col\">Location</th>\r\n                            </tr>\r\n                        </thead>\r\n                        {\r\n                        data.length === 0? <p>No booking you have made</p>: \r\n                            data && data.map((value, index) => {\r\n                                return (\r\n                                    <tbody key={index}>\r\n                                        <tr >\r\n                                            <th scope=\"row\">{index + 1}</th>\r\n                                            <td className='text-capitalize'>{value.firstName + \" \" + value.lastName}</td>\r\n                                            <td>Slot {value.slot}</td>\r\n                                            <td>{new Date(value.startDate).toLocaleDateString()}</td>\r\n                                            <td>{new Date(value.endDate).toLocaleDateString()}</td>\r\n                                            <td>{new Date(value.startDate).toLocaleTimeString()}</td>\r\n                                            <td>{new Date(value.endDate).toLocaleTimeString()}</td>\r\n                                            <td className='text-capitalize'>{value.location}</td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                )\r\n                            })\r\n                        }\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ViewBooking","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport url from '../../baseUrl/baseURL'\r\nimport AreaDetails from './areaDetails'\r\nimport Swal from 'sweetalert2'\r\nfunction AdminDashboard() {\r\n    const [data, setData] = useState([])\r\n\r\n    useEffect(() => {\r\n        axios({\r\n            method: 'get',\r\n            url: url + \"/getLocations\",\r\n            withCredentials: true\r\n        }).then((res) => {\r\n            if (res.status === 200) {\r\n                setData(res.data.data)\r\n            } else {\r\n                console.log(res)\r\n            }\r\n        }).catch((err) => {\r\n            console.log(err)\r\n        })\r\n    }, [])\r\n\r\n    function delt(id) {\r\n        const swalWithBootstrapButtons = Swal.mixin({\r\n            customClass: {\r\n                confirmButton: 'btn btn-success',\r\n                cancelButton: 'btn btn-danger'\r\n            },\r\n            buttonsStyling: false\r\n        })\r\n\r\n        swalWithBootstrapButtons.fire({\r\n            title: 'Are you sure?',\r\n            text: \"You won't be able to revert this!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Yes, delete it!',\r\n            cancelButtonText: 'No, cancel!',\r\n            reverseButtons: true\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                axios({\r\n                    method: 'post',\r\n                    url: url + '/deleteLocation',\r\n                    data: { id: id },\r\n                    withCredentials: true\r\n                }).then((res) => {\r\n                    swalWithBootstrapButtons.fire(\r\n                        'Deleted!',\r\n                        'Your file has been deleted.',\r\n                        'success'\r\n                    )\r\n                    window.location.reload(false);\r\n                }).catch((err) => {\r\n                    console.log(err)\r\n                })\r\n            } else if (\r\n                /* Read more about handling dismissals below */\r\n                result.dismiss === Swal.DismissReason.cancel\r\n            ) {\r\n                swalWithBootstrapButtons.fire(\r\n                    'Cancelled',\r\n                    'Your imaginary file is safe :)',\r\n                    'error'\r\n                )\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        <div>\r\n            <div className='container'>\r\n                <div className='row mt-5'>\r\n                    {\r\n                        data.map((value, i) => {\r\n                            return (\r\n                                <div className='col-md-4' key={i} >\r\n                                    <div className=\"card\">\r\n                                        <img src={value.imgUrl} className=\"card-img-top\" alt=\"...\"\r\n                                            style={{ height: 200, overflow: \"scroll\" }} />\r\n                                        <div className=\"card-body\">\r\n                                            <h5 className=\"card-title text-capitalize\"\r\n                                                style={{ color: \"#083144\" }}>{value.location}</h5>\r\n                                            {/* <p className=\"card-text\" style={{height: 200 , overflow: \"hidden\"}} >{value.desc}</p> */}\r\n                                            <p>Slots {value.slots}</p>\r\n                                            <button className=\"btn btn-danger\" onClick={() => delt(value._id)}>Delete</button>\r\n                                            <button className='btn btn-dark ml-3' onClick={() => {\r\n                                                return (\r\n                                                    Swal.fire({\r\n                                                        title: value.location,\r\n                                                        text: value.desc,\r\n                                                        imageUrl: value.imgUrl,\r\n                                                        imageWidth: 400,\r\n                                                        imageHeight: 200,\r\n                                                        imageAlt: 'Custom image',\r\n                                                    })\r\n                                                )\r\n                                            }}>Details</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminDashboard","import firebaseApp from 'firebase/app'\r\nimport 'firebase/storage'\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDCXEsUcb59iNCf3JBeVaKUrraAsa8A07w\",\r\n    authDomain: \"bloodapp-31bd2.firebaseapp.com\",\r\n    projectId: \"bloodapp-31bd2\",\r\n    storageBucket: \"bloodapp-31bd2.appspot.com\",\r\n    messagingSenderId: \"61197933681\",\r\n    appId: \"1:61197933681:web:c8f2db31707bb4e770cfd0\"\r\n};\r\n// Initialize Firebase\r\nfirebaseApp.initializeApp(firebaseConfig)\r\n\r\nlet Storage = firebaseApp.storage();\r\n\r\nexport default Storage","import React,{useState} from 'react'\r\nimport axios from 'axios'\r\nimport url from '../../baseUrl/baseURL'\r\nimport Swal from 'sweetalert2'\r\nimport Storage from '../../config/firebase'\r\nfunction AddArea() {\r\n    const [imgUrl, setUrl] = useState()\r\n    function addDetails(e) {\r\n        e.preventDefault()\r\n        axios({\r\n            method: 'post',\r\n            url: url + '/addAreaDetails',\r\n            data: {\r\n                location: document.getElementById('location').value,\r\n                slots: document.getElementById('slots').value,\r\n                desc: document.getElementById('desc').value,\r\n                imgURl: imgUrl,\r\n            },\r\n            withCredentials: true\r\n        }).then((res) => {\r\n            console.log(res)\r\n            if (res.data.status === 200) {\r\n                Swal.fire(\r\n                    'Congratulations',\r\n                    res.data.message,\r\n                    'success'\r\n                )\r\n            } else {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                    text: res.data.message\r\n                })\r\n            }\r\n        }).catch((err) => [\r\n            console.log(err)\r\n\r\n        ])\r\n    }\r\n    const onChangePics = (event) => {\r\n        let images = event.target.files[0];\r\n        const name=Date.now();\r\n        Storage.ref('picture/' + images+name)\r\n            .put(images)\r\n            .then((snapshot) => {\r\n                Swal.fire({\r\n                    position: 'center',\r\n                    title: 'Image is uploading',\r\n                    showConfirmButton: false,\r\n                    timer: 2000,\r\n                  }); \r\n                var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                snapshot.ref.getDownloadURL().then((URL) => {\r\n                    setUrl(URL);\r\n                });\r\n            });\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">\r\n                <h2 className=\"text-center mt-3\">Add Parking Areas</h2>\r\n                <div className=\"col-md-5 bg-white py-4 px-4 mt-3\" style={{ boxShadow: \"0 0 10px grey\" }}>\r\n                        <form onSubmit={addDetails}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col\">\r\n                                <label>Location</label>\r\n                                <input type=\"text\" placeholder=\"Location\" className=\"form-control\" id=\"location\" required />\r\n                            </div>\r\n                            <div className=\"col\">\r\n                                <label>Slots</label>\r\n                                <input type=\"number\" placeholder=\"Slots\" className=\"form-control\" id=\"slots\" required />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col\">\r\n                                <label>Description</label>\r\n                                <textarea className=\"form-control\" placeholder=\"Description\" required id=\"desc\" rows=\"3\"></textarea>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col\">\r\n                                <label>Area Image</label>\r\n                                <input type=\"file\" className=\"form-control\" \r\n                                onChange={onChangePics}  required />\r\n                            </div>\r\n                        </div>\r\n                        <button className=\"btn text-white mt-3\" style={{ backgroundColor: \"#083144\" }} type=\"submit\">Add</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddArea","import React from 'react'\r\nimport axios from 'axios'\r\nimport {useHistory} from 'react-router-dom'\r\nimport { user } from '../../redux/action/reduxAction'\r\nimport {useDispatch, useSelector } from 'react-redux'\r\nimport URL from '../../baseUrl/baseURL'\r\nfunction Logout() {\r\n    const dispatch = useDispatch()\r\n    const useData = useSelector(state => state.addUser)\r\n    const history = useHistory()\r\n    function logout() {\r\n        axios({\r\n            method: 'get',\r\n            url: URL+'/logout',\r\n            withCredentials: true\r\n        }).then((response) => {\r\n            dispatch(user({\r\n                loginStatus: false,\r\n                role: null\r\n            }))\r\n            history.push(\"/login\")\r\n        }, (error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n    return (\r\n        <div className='justify-content-right'>\r\n            <span className=\"text-white mr-3\" style={{textTransform: \"capitalize\"}}>{useData.loginUser.firstName}</span>\r\n            <button className=\"btn btn-light \" onClick={logout}>logout</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Logout","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\nimport Logout from './logout'\r\nfunction Navbar() {\r\n    const useData = useSelector(state => state.addUser)\r\n    return (\r\n        <div style={{ backgroundColor: \"#083144\" }}>\r\n            <div className='container'>\r\n                <nav className=\"navbar navbar-expand-lg pt-4 pb-4 \">\r\n                    <a className=\"navbar-brand text-white\">Booking App</a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n                        {useData.role === \"user\" ? <div className=\"navbar-nav\">\r\n                            <Link to=\"/\" className=\"nav-item nav-link active text-white\" >Areas</Link>\r\n                            <Link to=\"/viewbooking\" className=\"nav-item nav-link text-white\">View Booking</Link>\r\n                        </div> : useData.role === \"admin\" ? <div className=\"navbar-nav\">\r\n                            <Link to=\"/\" className=\"nav-item nav-link active text-white\" >Areas</Link>\r\n                            <Link to=\"/addarea\" className=\"nav-item nav-link text-white\">Add Area</Link>\r\n                        </div> : null}\r\n                    </div>\r\n                    <Logout />\r\n                </nav>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Navbar","import React, { useEffect } from 'react'\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Login from '../login/login'\r\nimport Signup from '../signup/signup'\r\nimport Dashboard from '../user/dashboard'\r\nimport Booking from './../user/booking'\r\nimport ViewBooking from '../user/viewbooking'\r\nimport AdminDasboard from '../admin/adminDash'\r\nimport AddArea from '../admin/areas'\r\nimport Navbar from './navbar'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport axios from 'axios'\r\nimport url from './../../baseUrl/baseURL'\r\nimport { user } from '../../redux/action/reduxAction'\r\n\r\nfunction RouterConfig() {\r\n\r\n    const useData = useSelector((state) => state.addUser)\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        axios({\r\n            method: \"get\",\r\n            url: url + `/profile`,\r\n            withCredentials: true\r\n        })\r\n            .then((res) => {\r\n                if (res.data.status === 200) {\r\n                    dispatch(user({\r\n                        loginUser: res.data.profile,\r\n                        loginStatus: true,\r\n                        role: res.data.profile.role\r\n                    }));\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                if (err) {\r\n                    dispatch(user({ loginStatus: false }));\r\n                }\r\n            });\r\n        return () => {\r\n            console.log(\"cleanup\");\r\n        };\r\n    }, [dispatch]);\r\n\r\n    if (useData.loginUser === null) {\r\n        return (\r\n            <div className='container'>\r\n                <div className=\"d-flex align-items-center justify-content-center \" style={{ width: \"100%\", height: \"100vh\" }}>\r\n                    <div className=\"spinner-border \" role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n\r\n        <Router>\r\n            {useData.loginStatus === false ?\r\n                <div>\r\n                    <Switch>\r\n                        <Route exact path=\"/\" component={Signup} />\r\n                        <Route path=\"/login\" component={Login} />\r\n                        <Route path=\"*\" >\r\n                            <Redirect to=\"/\" />\r\n                        </Route >\r\n                    </Switch>\r\n                </div> : null}\r\n\r\n            {useData.role === 'user' ?\r\n                <>\r\n                    <Navbar />\r\n                    <Switch>\r\n                        <Route exact path=\"/\" component={Dashboard} />\r\n                        <Route path=\"/booking\" component={Booking} />\r\n                        <Route path=\"/viewbooking\" component={ViewBooking} />\r\n                        <Route path=\"*\" >\r\n                            <Redirect to=\"/\" />\r\n                        </Route >\r\n                    </Switch>\r\n                </> : null\r\n            }\r\n            {useData.role === 'admin' ?\r\n                <>\r\n                    <Navbar />\r\n                    <Switch>\r\n                        <Route exact path=\"/\" component={AdminDasboard} />\r\n                        <Route path=\"/addarea\" component={AddArea} />\r\n                        <Route path=\"*\" >\r\n                            <Redirect to=\"/\" />\r\n                        </Route >\r\n                    </Switch>\r\n                </> : null\r\n            }\r\n        </Router>\r\n    )\r\n}\r\nexport default RouterConfig","import RouterConfig from './component/router/route'\n\nfunction App() {\n  return (\n      <RouterConfig/>\n  );\n}\n\nexport default App;\n","let initialState = {\r\n    loginUser: null,\r\n    loginStatus: false,\r\n    role: null\r\n}\r\nconst addUser = (state = initialState, action) =>{\r\n    switch(action.type){\r\n        case \"ADD_USER\": \r\n        return{\r\n            ...action.payload,\r\n            // ...state\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default addUser","import addUser from './reducers'\r\nimport {combineReducers} from 'redux'\r\n\r\nconst rootReducer = combineReducers({\r\n    addUser\r\n})\r\n\r\nexport default rootReducer","import {createStore} from 'redux'\r\n\r\nimport rootReducer from '../reducer/index'\r\n\r\nconst store = createStore(rootReducer)\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport store from './redux/store/store'\nimport { Provider } from 'react-redux'\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}