{"version":3,"sources":["assets/bg.jpg","component/login/textfield.js","baseUrl/baseURL.js","redux/action/reduxAction.js","component/login/login.js","component/signup/textfield.js","component/signup/signup.js","component/user/dashboard.js","component/user/booking.js","component/user/viewbooking.js","component/admin/adminDash.js","config/firebase.js","component/admin/areas.js","component/router/logout.js","component/router/navbar.js","component/router/route.js","App.js","redux/reducer/reducers.js","redux/reducer/index.js","redux/store/store.js","index.js"],"names":["TextField","label","props","useField","field","meta","className","htmlFor","name","touched","error","autoComplete","component","url","window","location","href","split","user","data","type","payload","Login","useState","msg","setMsg","msgClass","setMsgClass","log","setLog","dispatch","useDispatch","validate","Yup","email","required","password","min","style","backgroundImage","background","height","width","backgroundRepeat","backgroundSize","backgroundPosition","initialValues","validationSchema","onSubmit","values","loginData","toLowerCase","axios","method","withCredentials","then","res","status","message","loginStatus","loginUser","role","catch","err","console","formik","color","backgroundColor","to","Signup","firstName","max","lastName","phone","matches","marginTop","userData","Dashboard","setData","useEffect","map","value","i","src","imgUrl","alt","desc","pathname","state","Booking","valData","setValData","startDay","setStartDay","endDay","setEndDay","startTime","setStartTime","endTime","setEndTime","slot","setSlot","setErr","slotBtn","setSlotBtn","bookBtn","setBookBtn","vSlot","setVSlot","slots","count","push","startDate","Date","endDate","valSlot","find","val","ind","moment","toLocaleString","isSameOrAfter","isSameOrBefore","toLocaleDateString","isBetween","getMinutes","Number","fin","filter","indexOf","boxShadow","e","preventDefault","now","Swal","fire","icon","title","text","undefined","onChange","target","fontSize","onClick","ViewBooking","scope","length","index","toLocaleTimeString","AdminDashboard","overflow","id","swalWithBootstrapButtons","mixin","customClass","confirmButton","cancelButton","buttonsStyling","showCancelButton","confirmButtonText","cancelButtonText","reverseButtons","result","isConfirmed","reload","dismiss","DismissReason","cancel","delt","_id","imageUrl","imageWidth","imageHeight","imageAlt","firebaseApp","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","Storage","storage","AddArea","setUrl","document","getElementById","imgURl","placeholder","rows","event","images","files","ref","put","snapshot","position","showConfirmButton","timer","bytesTransferred","totalBytes","getDownloadURL","URL","Logout","useData","useSelector","addUser","history","useHistory","textTransform","response","Navbar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","RouterConfig","profile","exact","path","AdminDasboard","App","initialState","action","rootReducer","combineReducers","store","createStore","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d20903e1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bg.fa917832.jpg\";","import React from 'react';\r\nimport { ErrorMessage, useField } from 'formik';\r\n\r\nexport const TextField = ({ label, ...props }) => {\r\n  const [field, meta] = useField(props);\r\n  return (\r\n    <div className=\"mb-2\">\r\n      <label htmlFor={field.name}>{label}</label>\r\n      <input\r\n        className={`form-control shadow-none ${meta.touched && meta.error && 'is-invalid'}`}\r\n        {...field} {...props}\r\n        autoComplete=\"off\"\r\n      />\r\n      <ErrorMessage component=\"div\" name={field.name} className=\"error\" />\r\n    </div>\r\n  )\r\n}","var url = window.location.href.split(\":\");\r\nif (url[0] === \"https\") {\r\n    url = 'https://parking-app-react.herokuapp.com'\r\n}\r\nelse {\r\n    url = \"http://localhost:4000\"\r\n}\r\nexport default url;","export const user = (data) =>{\r\n    return{\r\n        type: \"ADD_USER\",\r\n        payload: data\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport background from '../../assets/bg.jpg'\r\nimport { Form, Formik } from 'formik'\r\nimport { TextField } from './textfield';\r\nimport { Link } from 'react-router-dom'\r\nimport * as Yup from \"yup\"\r\nimport axios from 'axios'\r\nimport url from '../../baseUrl/baseURL'\r\nimport { useDispatch } from 'react-redux'\r\nimport { user } from '../../redux/action/reduxAction'\r\nfunction Login() {\r\n    const [msg, setMsg] = useState()\r\n    const [msgClass, setMsgClass] = useState()\r\n    const [log, setLog] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n    const validate = Yup.object({\r\n        email: Yup.string()\r\n            .email('Email is invalid')\r\n            .required('Email is required'),\r\n        password: Yup.string()\r\n            .min(6, 'Password must be at least 6 charaters')\r\n            .required('Password is required'),\r\n    })\r\n    return (\r\n        <div style={{\r\n            backgroundImage: `url(${background})`,\r\n            height: \"100vh\", width: \"100%\", backgroundRepeat: \"no-repeat\",\r\n            backgroundSize: \"cover\", backgroundPosition: \"center\"\r\n        }}>\r\n            <div className='container '>\r\n                <div className='row' >\r\n                    <div className='d-flex justify-content-center align-items-center' style={{ width: \"100%\", height: \"100vh\" }}>\r\n                        <div className=\"col-md-5 bg-white px-5 pb-3\" >\r\n                            <Formik\r\n                                initialValues={{\r\n                                    email: '',\r\n                                    password: '',\r\n                                }}\r\n                                validationSchema={validate}\r\n                                onSubmit={values => {\r\n                                    const loginData = {\r\n                                        email: values.email.toLowerCase(),\r\n                                        password: values.password\r\n                                    }\r\n                                    setLog(true)\r\n                                    axios({\r\n                                        method: 'post',\r\n                                        url: url + \"/login\",\r\n                                        data: loginData,\r\n                                        withCredentials: true\r\n                                    }).then((res) => {\r\n                                        if (res.data.status === 200) {\r\n                                            setMsgClass('alert-success')\r\n                                            setMsg(res.data.message)\r\n                                            dispatch(user({\r\n                                                loginStatus: true,\r\n                                                loginUser: res.data.user,\r\n                                                role: res.data.user.role\r\n                                            }))\r\n                                            // history.push('/dasboard')\r\n                                        } else {\r\n                                            setMsgClass('alert-danger')\r\n                                            setLog(false)\r\n                                            setMsg(res.data.message)\r\n                                        }\r\n                                    }).catch((err) => {\r\n                                        console.log(err)\r\n                                    })\r\n                                }}\r\n                            >\r\n                                {formik => (\r\n                                    <div>\r\n                                        <h1 className=\"my-4 font-weight-bold .display-4\" style={{ color: \"#083144\" }}>Login</h1>\r\n                                        <Form>\r\n                                            <TextField label=\"Email\" name=\"email\" type=\"email\" />\r\n                                            <TextField label=\"Password\" name=\"password\" type=\"password\" />\r\n                                            <button className=\"btn text-white\" style={{ width: \"100%\", backgroundColor: \"#083144\" }}\r\n                                                type=\"submit\">\r\n                                                Login\r\n                                        </button>\r\n                                        </Form>\r\n                                        {log ? <div className='text-center mt-2'>\r\n                                            <div className=\"spinner-border \" role=\"status\">\r\n                                                <span className=\"sr-only\">Loading...</span>\r\n                                            </div>\r\n                                        </div> : null}\r\n                                        <p className=\"mt-2\">Already have an account? <Link to=\"/\">Signup</Link> </p>\r\n                                        {msg ? <div className={`alert ${msgClass}`} role=\"alert\">{msg}</div> : null}\r\n                                    </div>\r\n                                )}\r\n                            </Formik>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","import React from 'react';\r\nimport { ErrorMessage, useField } from 'formik';\r\n\r\nexport const TextField = ({ label, ...props }) => {\r\n  const [field, meta] = useField(props);\r\n  return (\r\n    <div className=\"mb-2\">\r\n      <label htmlFor={field.name}>{label}</label>\r\n      <input\r\n        className={`form-control shadow-none ${meta.touched && meta.error && 'is-invalid'}`}\r\n        {...field} {...props}\r\n        autoComplete=\"off\"\r\n      />\r\n      <ErrorMessage component=\"div\" name={field.name} className=\"error\" />\r\n    </div>\r\n  )\r\n}","import React, { useState } from 'react'\r\nimport background from '../../assets/bg.jpg'\r\nimport { Form, Formik } from 'formik'\r\nimport { TextField } from './textfield';\r\nimport { Link } from 'react-router-dom'\r\nimport * as Yup from \"yup\"\r\nimport axios from 'axios'\r\nimport url from '../../baseUrl/baseURL'\r\nfunction Signup() {\r\n  const phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/\r\n  const [msg, setMsg] = useState()\r\n  const [msgClass, setMsgClass] = useState()\r\n  const validate = Yup.object({\r\n    firstName: Yup.string()\r\n      .max(15, 'Must be 15 characters or less')\r\n      .required('Required'),\r\n    lastName: Yup.string()\r\n      .max(20, 'Must be 20 characters or less')\r\n      .required('Required'),\r\n    email: Yup.string()\r\n      .email('Email is invalid')\r\n      .required('Email is required'),\r\n    phone: Yup.string().matches(phoneRegExp, 'Phone number is not valid'),\r\n    password: Yup.string()\r\n      .min(6, 'Password must be at least 6 charaters')\r\n      .required('Password is required')\r\n  })\r\n  return (\r\n    <div style={{\r\n      backgroundImage: `url(${background})`,\r\n      height: \"100vh\", width: \"100%\", backgroundRepeat: \"no-repeat\",\r\n      backgroundSize: \"cover\", backgroundPosition: \"center\"\r\n    }}>\r\n      <div className='container '>\r\n        <div className='row'>\r\n          <div className='d-flex justify-content-center align-items-center' style={{ width: \"100%\", height: \"100vh\" }}>\r\n            <div className=\"col-md-5 bg-white px-5 pb-3\" style={{ marginTop: '40px' }}>\r\n              <Formik\r\n                initialValues={{\r\n                  firstName: '',\r\n                  lastName: '',\r\n                  email: '',\r\n                  phone: '',\r\n                  password: '',\r\n                }}\r\n                validationSchema={validate}\r\n                onSubmit={(values) => {\r\n                  const userData = {\r\n                    firstName: values.firstName,\r\n                    lastName: values.lastName,\r\n                    email: values.email.toLowerCase(),\r\n                    phone: values.phone,\r\n                    password: values.password\r\n                  }\r\n                  axios({\r\n                    method: 'post',\r\n                    url: url + \"/signup\",\r\n                    data: userData,\r\n                    withCredentials: true\r\n                  }).then((res) => {\r\n                    if (res.data.status === 200) {\r\n                      setMsgClass('alert-success')\r\n                      setMsg(res.data.message)\r\n                      values.firstName = \"\"\r\n                      values.lastName = \"\"\r\n                      values.email = \"\"\r\n                      values.phone = \"\"\r\n                      values.password = \"\"\r\n                    } else {\r\n                      setMsgClass('alert-danger')\r\n                      setMsg(res.data.message)\r\n                    }\r\n                  }).catch((err) => {\r\n                    console.log(err)\r\n                  })\r\n                }}\r\n              >\r\n                {formik => (\r\n                  <div>\r\n                    <h1 className=\"my-4 font-weight-bold .display-4\" style={{ color: \"#083144\" }}>Sign Up</h1>\r\n                    <Form>\r\n                      <TextField label=\"First Name\" name=\"firstName\" type=\"text\" />\r\n                      <TextField label=\"Last Name\" name=\"lastName\" type=\"text\" />\r\n                      <TextField label=\"Email\" name=\"email\" type=\"email\" />\r\n                      <TextField label=\"Phone\" name=\"phone\" type=\"text\" />\r\n                      <TextField label=\"Password\" name=\"password\" type=\"password\" />\r\n                      <button className=\"btn text-white\" style={{ backgroundColor: \"#083144\" }} type=\"submit\">Register</button>\r\n                    </Form>\r\n                    <p className=\"mt-2\">Already have an account? <Link to=\"/login\">Login</Link> </p>\r\n                    {msg ? <div className={`alert ${msgClass}`} role=\"alert\">{msg}</div> : null}\r\n                  </div>\r\n                )}\r\n              </Formik>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Signup","import React ,{useEffect, useState} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport url from '../../baseUrl/baseURL'\r\nfunction Dashboard() {\r\n    const [data,setData] = useState([])\r\n    useEffect(()=>{\r\n        axios({\r\n            method: 'get',\r\n            url: url + \"/getLocations\",\r\n            withCredentials: true \r\n        }).then((res)=>{\r\n            if(res.status === 200){\r\n                setData(res.data.data)\r\n            }else{\r\n                console.log(res)\r\n            }\r\n        }).catch((err)=>{\r\n            console.log(err)\r\n        })\r\n    },[])\r\n    return (\r\n        <div>\r\n            <div className='container'>\r\n                <div className='row mt-5'>\r\n                    {\r\n                        data.map((value, i) => {\r\n                            return (\r\n                                <div className='col-md-4' key={i}   >\r\n                                    <div className=\"card\" >\r\n                                        <img src={value.imgUrl} className=\"card-img-top\" alt=\"...\" style={{height: 200}} />\r\n                                        <div className=\"card-body\">\r\n                                            <h5 className=\"card-title text-capitalize\" style={{ color: \"#083144\" }}>{value.location}</h5>\r\n                                            <p className=\"card-text\">{value.desc}</p>\r\n                                            <Link to={{\r\n                                                pathname: \"/booking\",\r\n                                                state: value\r\n                                            }} className=\"btn text-white\" style={{backgroundColor: \"#083144\"}}>Booking</Link>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard","import React, { useState } from 'react'\r\nimport axios from 'axios'\r\nimport url from '../../baseUrl/baseURL'\r\nimport Swal from 'sweetalert2'\r\nimport moment from 'moment'\r\nfunction Booking(props) {\r\n    const [valData, setValData] = useState([])\r\n    const [startDay, setStartDay] = useState('')\r\n    const [endDay, setEndDay] = useState('')\r\n    const [startTime, setStartTime] = useState('')\r\n    const [endTime, setEndTime] = useState('')\r\n    const [slot, setSlot] = useState()\r\n    const [err, setErr] = useState('')\r\n    const [slotBtn, setSlotBtn] = useState(true)\r\n    const [bookBtn, setBookBtn] = useState(false)\r\n    const [vSlot, setVSlot] = useState(false)\r\n    const data = props.location.state.slots\r\n    const count = []\r\n    for (let i = 1; i <= data; i++) {\r\n        count.push(i)\r\n    }\r\n    \r\n    let startDate = new Date(startDay + \" \" + startTime)\r\n    let endDate = new Date(endDay + \" \" + endTime)\r\n    function bookPark(e) {\r\n        e.preventDefault();\r\n        if (startDate < Date.now() || endDate < Date.now() || startDate > endDate ) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: \"Please select valid date and time\",\r\n            })\r\n        }\r\n        else {\r\n            slot === '' || slot === undefined ? setErr('Required') :\r\n                axios({\r\n                    method: 'post',\r\n                    url: url + \"/booking\",\r\n                    data: {\r\n                        location: props.location.state.location,\r\n                        startDate: Number(startDate),\r\n                        endDate: Number(endDate),\r\n                        slot: slot,\r\n                    },\r\n                    withCredentials: true\r\n                }).then((res) => {\r\n                    if (res.data.status === 200) {\r\n                        console.log(res.data.message)\r\n                        Swal.fire(\r\n                            'Congratulations',\r\n                            res.data.message,\r\n                            'success'\r\n                        )\r\n                        setVSlot(false)\r\n                        setSlotBtn(true)\r\n                        setBookBtn(false)\r\n                        setStartDay('')\r\n                        setStartTime('')\r\n                        setEndTime('')\r\n                        setEndDay('')\r\n                    } else {\r\n                        console.log(res.data.message)\r\n                        Swal.fire({\r\n                            icon: 'error',\r\n                            title: 'Oops...',\r\n                            text: res.data.message,\r\n                        })\r\n                    }\r\n                }).catch((err) => {\r\n                    console.log(err)\r\n                })\r\n        }\r\n\r\n    }\r\n\r\n    function validateSlot() {\r\n        if (startTime !== '' && endTime !== '' && startDay !== '' && endDay !== '') {\r\n            axios({\r\n                method: \"post\",\r\n                url: url + \"/validateSlot\",\r\n                data: {\r\n                    startDate: Number(startDate),\r\n                    endDate: Number(endDate),\r\n                    location: props.location.state.location,\r\n                },\r\n                withCredentials: true\r\n            }).then((res) => {\r\n                if (res.data.status === 200) {\r\n                    setValData(res.data.data)\r\n                    console.log(res.data.data)\r\n                }\r\n                else {\r\n                    setValData([])\r\n                }\r\n            }).catch((err) => {\r\n                console.log(err)\r\n            })\r\n            setVSlot(true)\r\n            setSlotBtn(false)\r\n            setBookBtn(true)\r\n        }\r\n        else {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: \"Please fill in all required fields before checking the slots\",\r\n            })\r\n        }\r\n    }\r\n\r\n    var valSlot = []\r\n\r\n    valData.find((val, ind) => {\r\n        if (moment(new Date(startDate).toLocaleString()).isSameOrAfter(new Date(val.startDate).toLocaleString()) &&\r\n            moment(new Date(startDate).toLocaleString()).isSameOrBefore(new Date(val.endDate).toLocaleString())\r\n            || moment(new Date(val.startDate).toLocaleDateString()).isBetween(new Date(startDate).toLocaleDateString(), new Date(endDate).toLocaleDateString()) && new Date(startDate).getMinutes() >= new Date(val.startDate).getMinutes() && new Date(startDate).getMinutes() <= new Date(val.endDate).getMinutes()) {\r\n            valSlot.push(Number(val.slot))\r\n        }\r\n        if (moment(new Date(endDate).toLocaleString()).isSameOrBefore(new Date(val.endDate).toLocaleString()) &&\r\n            moment(new Date(endDate).toLocaleString()).isSameOrAfter(new Date(val.startDate).toLocaleString())\r\n            || moment(new Date(val.endDate).toLocaleDateString()).isBetween(new Date(startDate).toLocaleDateString(), new Date(endDate).toLocaleDateString())\r\n            && new Date(endDate).getMinutes() >= new Date(val.endDate).getMinutes() && new Date(endDate).getMinutes() <= new Date(val.startDate).getMinutes()) {\r\n            valSlot.push(Number(val.slot))\r\n        }\r\n    })\r\n    var fin = count.filter((val) => {\r\n        return valSlot.indexOf(val) < 0\r\n    })\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">\r\n                <h2 className=\"text-center mt-3\">Book Parking</h2>\r\n                <div className=\"col-md-5 bg-white py-4 px-4 mt-3\" style={{ boxShadow: \"0 0 10px grey\" }}>\r\n                    <h2 className=\"text-center mb-3 text-capitalize\">{props.location.state.location}</h2>\r\n                    <form onSubmit={bookPark}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col\">\r\n                                <label>Start Day</label>\r\n                                <input type=\"date\" className=\"form-control\"\r\n                                    value={startDay} required onChange={(e) => setStartDay(e.target.value)} />\r\n                            </div>\r\n                            <div className=\"col\">\r\n                                <label>End Day</label>\r\n                                <input type=\"date\" className=\"form-control\"\r\n                                    value={endDay} required onChange={(e) => setEndDay(e.target.value)} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col\">\r\n                                <label>Start Time</label>\r\n                                <input type=\"time\" className=\"form-control\"\r\n                                    value={startTime} required onChange={(e) => setStartTime(e.target.value)} />\r\n                            </div>\r\n                            <div className=\"col\">\r\n                                <label>End Time</label>\r\n                                <input type=\"time\" className=\"form-control\" \r\n                                    required onChange={(e) => setEndTime(e.target.value)} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col\">\r\n                                {vSlot ?\r\n                                    <>\r\n                                        <label>Select Slots</label>\r\n                                        <select className=\"form-control\" required onChange={(e) => setSlot(e.target.value)}>\r\n                                            <option>Select Slots</option>\r\n                                            {\r\n                                                fin.map((val, ind) => {\r\n                                                    return (\r\n                                                        <option value={val} key={ind}>Slot {val}</option>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </select></> : null}\r\n                                {err ? <p className='text-danger' style={{ fontSize: 12 }}>{err}</p> : null}\r\n                            </div>\r\n                        </div>\r\n                        {bookBtn ? <button className=\"btn text-white mt-3 w-100\" style={{ backgroundColor: \"#083144\" }}\r\n                            type=\"submit\">Book</button> : null}\r\n                        {slotBtn?<button className=\"btn text-white mt-3 w-100\"\r\n                            style={{ backgroundColor: \"#083144\" }} onClick={validateSlot}\r\n                            type=\"button\" >Show Slot</button>: null}\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Booking","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport url from './../../baseUrl/baseURL'\r\nfunction ViewBooking() {\r\n    const [data, setData] = useState([])\r\n\r\n    useEffect(() => {\r\n        axios({\r\n            method: 'get',\r\n            url: url + '/getBookings',\r\n            withCredentials: true,\r\n        }).then((res) => {\r\n            console.log(res.data.data)\r\n            setData(res.data.data)\r\n        }).catch((err) => {\r\n            console.log(err)\r\n        })\r\n    }, [])\r\n    // if (data.length === 0) {\r\n    //     return (\r\n    //         <div className='container'>\r\n    //         <div className=\"d-flex align-items-center justify-content-center \" style={{width: \"100%\", height: \"100vh\"}}>\r\n    //             <div className=\"spinner-border \" role=\"status\">\r\n    //                 <span className=\"sr-only\">Loading...</span>\r\n    //             </div>\r\n    //         </div>\r\n    //     </div>\r\n    //     )\r\n    // }\r\n    return (\r\n        <div >\r\n            <div className='container'>\r\n                <div className=\"row mt-5\">\r\n                    <table className=\"table\">\r\n                        <thead style={{ backgroundColor: \"#083144\", color: \"#fff\" }}>\r\n                            <tr>\r\n                                <th scope=\"col\">#</th>\r\n                                <th scope=\"col\">Full Name</th>\r\n                                <th scope=\"col\">Slot</th>\r\n                                <th scope=\"col\">Start Date</th>\r\n                                <th scope=\"col\">End Date</th>\r\n                                <th scope=\"col\">Start Time</th>\r\n                                <th scope=\"col\">End Time</th>\r\n                                <th scope=\"col\">Location</th>\r\n                            </tr>\r\n                        </thead>\r\n                        {\r\n                        data.length === 0? <p>No booking you have made</p>: \r\n                            data && data.map((value, index) => {\r\n                                return (\r\n                                    <tbody key={index}>\r\n                                        <tr >\r\n                                            <th scope=\"row\">{index + 1}</th>\r\n                                            <td className='text-capitalize'>{value.firstName + \" \" + value.lastName}</td>\r\n                                            <td>Slot {value.slot}</td>\r\n                                            <td>{new Date(value.startDate).toLocaleDateString()}</td>\r\n                                            <td>{new Date(value.endDate).toLocaleDateString()}</td>\r\n                                            <td>{new Date(value.startDate).toLocaleTimeString()}</td>\r\n                                            <td>{new Date(value.endDate).toLocaleTimeString()}</td>\r\n                                            <td className='text-capitalize'>{value.location}</td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                )\r\n                            })\r\n                        }\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ViewBooking","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport url from '../../baseUrl/baseURL'\r\nimport AreaDetails from './areaDetails'\r\nimport Swal from 'sweetalert2'\r\nfunction AdminDashboard() {\r\n    const [data, setData] = useState([])\r\n\r\n    useEffect(() => {\r\n        axios({\r\n            method: 'get',\r\n            url: url + \"/getLocations\",\r\n            withCredentials: true\r\n        }).then((res) => {\r\n            if (res.status === 200) {\r\n                setData(res.data.data)\r\n            } else {\r\n                console.log(res)\r\n            }\r\n        }).catch((err) => {\r\n            console.log(err)\r\n        })\r\n    }, [])\r\n\r\n    function delt(id) {\r\n        const swalWithBootstrapButtons = Swal.mixin({\r\n            customClass: {\r\n                confirmButton: 'btn btn-success',\r\n                cancelButton: 'btn btn-danger'\r\n            },\r\n            buttonsStyling: false\r\n        })\r\n\r\n        swalWithBootstrapButtons.fire({\r\n            title: 'Are you sure?',\r\n            text: \"You won't be able to revert this!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Yes, delete it!',\r\n            cancelButtonText: 'No, cancel!',\r\n            reverseButtons: true\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                axios({\r\n                    method: 'post',\r\n                    url: url + '/deleteLocation',\r\n                    data: { id: id },\r\n                    withCredentials: true\r\n                }).then((res) => {\r\n                    swalWithBootstrapButtons.fire(\r\n                        'Deleted!',\r\n                        'Your file has been deleted.',\r\n                        'success'\r\n                    )\r\n                    window.location.reload(false);\r\n                }).catch((err) => {\r\n                    console.log(err)\r\n                })\r\n            } else if (\r\n                /* Read more about handling dismissals below */\r\n                result.dismiss === Swal.DismissReason.cancel\r\n            ) {\r\n                swalWithBootstrapButtons.fire(\r\n                    'Cancelled',\r\n                    'Your imaginary file is safe :)',\r\n                    'error'\r\n                )\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        <div>\r\n            <div className='container'>\r\n                <div className='row mt-5'>\r\n                    {\r\n                        data.map((value, i) => {\r\n                            return (\r\n                                <div className='col-md-4' key={i} >\r\n                                    <div className=\"card\">\r\n                                        <img src={value.imgUrl} className=\"card-img-top\" alt=\"...\"\r\n                                            style={{ height: 200, overflow: \"scroll\" }} />\r\n                                        <div className=\"card-body\">\r\n                                            <h5 className=\"card-title text-capitalize\"\r\n                                                style={{ color: \"#083144\" }}>{value.location}</h5>\r\n                                            {/* <p className=\"card-text\" style={{height: 200 , overflow: \"hidden\"}} >{value.desc}</p> */}\r\n                                            <p>Slots {value.slots}</p>\r\n                                            <button className=\"btn btn-danger\" onClick={() => delt(value._id)}>Delete</button>\r\n                                            <button className='btn btn-dark ml-3' onClick={() => {\r\n                                                return (\r\n                                                    Swal.fire({\r\n                                                        title: value.location,\r\n                                                        text: value.desc,\r\n                                                        imageUrl: value.imgUrl,\r\n                                                        imageWidth: 400,\r\n                                                        imageHeight: 200,\r\n                                                        imageAlt: 'Custom image',\r\n                                                    })\r\n                                                )\r\n                                            }}>Details</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminDashboard","import firebaseApp from 'firebase/app'\r\nimport 'firebase/storage'\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDCXEsUcb59iNCf3JBeVaKUrraAsa8A07w\",\r\n    authDomain: \"bloodapp-31bd2.firebaseapp.com\",\r\n    projectId: \"bloodapp-31bd2\",\r\n    storageBucket: \"bloodapp-31bd2.appspot.com\",\r\n    messagingSenderId: \"61197933681\",\r\n    appId: \"1:61197933681:web:c8f2db31707bb4e770cfd0\"\r\n};\r\n// Initialize Firebase\r\nfirebaseApp.initializeApp(firebaseConfig)\r\n\r\nlet Storage = firebaseApp.storage();\r\n\r\nexport default Storage","import React,{useState} from 'react'\r\nimport axios from 'axios'\r\nimport url from '../../baseUrl/baseURL'\r\nimport Swal from 'sweetalert2'\r\nimport Storage from '../../config/firebase'\r\nfunction AddArea() {\r\n    const [imgUrl, setUrl] = useState()\r\n    function addDetails(e) {\r\n        e.preventDefault()\r\n        axios({\r\n            method: 'post',\r\n            url: url + '/addAreaDetails',\r\n            data: {\r\n                location: document.getElementById('location').value,\r\n                slots: document.getElementById('slots').value,\r\n                desc: document.getElementById('desc').value,\r\n                imgURl: imgUrl,\r\n            },\r\n            withCredentials: true\r\n        }).then((res) => {\r\n            console.log(res)\r\n            if (res.data.status === 200) {\r\n                Swal.fire(\r\n                    'Congratulations',\r\n                    res.data.message,\r\n                    'success'\r\n                )\r\n            } else {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                    text: res.data.message\r\n                })\r\n            }\r\n        }).catch((err) => [\r\n            console.log(err)\r\n\r\n        ])\r\n    }\r\n    const onChangePics = (event) => {\r\n        let images = event.target.files[0];\r\n        const name=Date.now();\r\n        Storage.ref('picture/' + images+name)\r\n            .put(images)\r\n            .then((snapshot) => {\r\n                Swal.fire({\r\n                    position: 'center',\r\n                    title: 'Image is uploading',\r\n                    showConfirmButton: false,\r\n                    timer: 2000,\r\n                  }); \r\n                var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                snapshot.ref.getDownloadURL().then((URL) => {\r\n                    setUrl(URL);\r\n                });\r\n            });\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">\r\n                <h2 className=\"text-center mt-3\">Add Parking Areas</h2>\r\n                <div className=\"col-md-5 bg-white py-4 px-4 mt-3\" style={{ boxShadow: \"0 0 10px grey\" }}>\r\n                        <form onSubmit={addDetails}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col\">\r\n                                <label>Location</label>\r\n                                <input type=\"text\" placeholder=\"Location\" className=\"form-control\" id=\"location\" required />\r\n                            </div>\r\n                            <div className=\"col\">\r\n                                <label>Slots</label>\r\n                                <input type=\"number\" placeholder=\"Slots\" className=\"form-control\" id=\"slots\" required />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col\">\r\n                                <label>Description</label>\r\n                                <textarea className=\"form-control\" placeholder=\"Description\" required id=\"desc\" rows=\"3\"></textarea>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col\">\r\n                                <label>Area Image</label>\r\n                                <input type=\"file\" className=\"form-control\" \r\n                                onChange={onChangePics}  required />\r\n                            </div>\r\n                        </div>\r\n                        <button className=\"btn text-white mt-3\" style={{ backgroundColor: \"#083144\" }} type=\"submit\">Add</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddArea","import React from 'react'\r\nimport axios from 'axios'\r\nimport {useHistory} from 'react-router-dom'\r\nimport { user } from '../../redux/action/reduxAction'\r\nimport {useDispatch, useSelector } from 'react-redux'\r\nimport URL from '../../baseUrl/baseURL'\r\nfunction Logout() {\r\n    const dispatch = useDispatch()\r\n    const useData = useSelector(state => state.addUser)\r\n    const history = useHistory()\r\n    function logout() {\r\n        axios({\r\n            method: 'get',\r\n            url: URL+'/logout',\r\n            withCredentials: true\r\n        }).then((response) => {\r\n            dispatch(user({\r\n                loginStatus: false,\r\n                role: null\r\n            }))\r\n            history.push(\"/login\")\r\n        }, (error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n    return (\r\n        <div className='justify-content-right'>\r\n            <span className=\"text-white mr-3\" style={{textTransform: \"capitalize\"}}>{useData.loginUser.firstName}</span>\r\n            <button className=\"btn btn-light \" onClick={logout}>logout</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Logout","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\nimport Logout from './logout'\r\nfunction Navbar() {\r\n    const useData = useSelector(state => state.addUser)\r\n    return (\r\n        <div style={{ backgroundColor: \"#083144\" }}>\r\n            <div className='container'>\r\n                <nav className=\"navbar navbar-expand-lg pt-4 pb-4 \">\r\n                    <a className=\"navbar-brand text-white\">Booking App</a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n                        {useData.role === \"user\" ? <div className=\"navbar-nav\">\r\n                            <Link to=\"/\" className=\"nav-item nav-link active text-white\" >Areas</Link>\r\n                            <Link to=\"/viewbooking\" className=\"nav-item nav-link text-white\">View Booking</Link>\r\n                        </div> : useData.role === \"admin\" ? <div className=\"navbar-nav\">\r\n                            <Link to=\"/\" className=\"nav-item nav-link active text-white\" >Areas</Link>\r\n                            <Link to=\"/addarea\" className=\"nav-item nav-link text-white\">Add Area</Link>\r\n                        </div> : null}\r\n                    </div>\r\n                    <Logout />\r\n                </nav>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Navbar","import React, { useEffect } from 'react'\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Login from '../login/login'\r\nimport Signup from '../signup/signup'\r\nimport Dashboard from '../user/dashboard'\r\nimport Booking from './../user/booking'\r\nimport ViewBooking from '../user/viewbooking'\r\nimport AdminDasboard from '../admin/adminDash'\r\nimport AddArea from '../admin/areas'\r\nimport Navbar from './navbar'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport axios from 'axios'\r\nimport url from './../../baseUrl/baseURL'\r\nimport { user } from '../../redux/action/reduxAction'\r\n\r\nfunction RouterConfig() {\r\n\r\n    const useData = useSelector((state) => state.addUser)\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        axios({\r\n            method: \"get\",\r\n            url: url + `/profile`,\r\n            withCredentials: true\r\n        })\r\n            .then((res) => {\r\n                if (res.data.status === 200) {\r\n                    dispatch(user({\r\n                        loginUser: res.data.profile,\r\n                        loginStatus: true,\r\n                        role: res.data.profile.role\r\n                    }));\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                if (err) {\r\n                    dispatch(user({ loginStatus: false }));\r\n                }\r\n            });\r\n        return () => {\r\n            console.log(\"cleanup\");\r\n        };\r\n    }, [dispatch]);\r\n\r\n    if (useData.loginUser === null) {\r\n        return (\r\n            <div className='container'>\r\n                <div className=\"d-flex align-items-center justify-content-center \" style={{ width: \"100%\", height: \"100vh\" }}>\r\n                    <div className=\"spinner-border \" role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n\r\n        <Router>\r\n            {useData.loginStatus === false ?\r\n                <div>\r\n                    <Switch>\r\n                        <Route exact path=\"/\" component={Signup} />\r\n                        <Route path=\"/login\" component={Login} />\r\n                        <Route path=\"*\" >\r\n                            <Redirect to=\"/\" />\r\n                        </Route >\r\n                    </Switch>\r\n                </div> : null}\r\n\r\n            {useData.role === 'user' ?\r\n                <>\r\n                    <Navbar />\r\n                    <Switch>\r\n                        <Route exact path=\"/\" component={Dashboard} />\r\n                        <Route path=\"/booking\" component={Booking} />\r\n                        <Route path=\"/viewbooking\" component={ViewBooking} />\r\n                        <Route path=\"*\" >\r\n                            <Redirect to=\"/\" />\r\n                        </Route >\r\n                    </Switch>\r\n                </> : null\r\n            }\r\n            {useData.role === 'admin' ?\r\n                <>\r\n                    <Navbar />\r\n                    <Switch>\r\n                        <Route exact path=\"/\" component={AdminDasboard} />\r\n                        <Route path=\"/addarea\" component={AddArea} />\r\n                        <Route path=\"*\" >\r\n                            <Redirect to=\"/\" />\r\n                        </Route >\r\n                    </Switch>\r\n                </> : null\r\n            }\r\n        </Router>\r\n    )\r\n}\r\nexport default RouterConfig","import RouterConfig from './component/router/route'\n\nfunction App() {\n  return (\n      <RouterConfig/>\n  );\n}\n\nexport default App;\n","let initialState = {\r\n    loginUser: null,\r\n    loginStatus: false,\r\n    role: null\r\n}\r\nconst addUser = (state = initialState, action) =>{\r\n    switch(action.type){\r\n        case \"ADD_USER\": \r\n        return{\r\n            ...action.payload,\r\n            // ...state\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default addUser","import addUser from './reducers'\r\nimport {combineReducers} from 'redux'\r\n\r\nconst rootReducer = combineReducers({\r\n    addUser\r\n})\r\n\r\nexport default rootReducer","import {createStore} from 'redux'\r\n\r\nimport rootReducer from '../reducer/index'\r\n\r\nconst store = createStore(rootReducer)\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport store from './redux/store/store'\nimport { Provider } from 'react-redux'\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}